version: 0.2
env:
  variables:
    AWS_BUCKET_NAME: $AWS_BUCKET_NAME
    AWS_REGION: $AWS_REGION
    AWS_ACCESS_KEY: $AWS_ACCESS_KEY
    AWS_SECRET_KEY: $AWS_SECRET_KEY

phases:
  install:
    runtime-versions:
      docker: 19

  pre_build:
    commands:
      # export the env variables
      - echo REACT_APP_WS_BUCKET_NAME=${AWS_BUCKET_NAME} >> .env
      - echo REACT_APP_AWS_REGION=${AWS_REGION} >> .env
      - echo REACT_APP_AWS_ACCESS_KEY=${AWS_ACCESS_KEY} >> .env
      - echo REACT_APP_AWS_SECRET_KEY=${AWS_SECRET_KEY} >> .env
      # log in to docker account to prevent rate limiting
      - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      # build the Docker image for the application
      - docker build -t react-app-aws-codepipeline:latest -f Dockerfile.prod .

  build:
    commands:
      # run container from built image (builds production files)
      - docker run -e AWS_BUCKET_NAME=$AWS_BUCKET_NAME -e AWS_REGION=$AWS_REGION -e AWS_ACCESS_KEY=$AWS_ACCESS_KEY -e AWS_SECRET_KEY=$AWS_SECRET_KEY react-app-aws-codepipeline:latest
      # set container id to variable
      - CONTAINER=$(docker ps -alq)
      # copy build files from container to host
      - docker cp $CONTAINER:/app/build/ $CODEBUILD_SRC_DIR/build

artifacts:
  # include all files required to run application
  # we include only the static build files
  files:
    - "**/*"
  base-directory: "build"